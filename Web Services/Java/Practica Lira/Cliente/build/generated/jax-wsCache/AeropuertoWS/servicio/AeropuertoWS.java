
package servicio;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "AeropuertoWS", targetNamespace = "http://Servicio/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface AeropuertoWS {


    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hello", targetNamespace = "http://Servicio/", className = "servicio.Hello")
    @ResponseWrapper(localName = "helloResponse", targetNamespace = "http://Servicio/", className = "servicio.HelloResponse")
    @Action(input = "http://Servicio/AeropuertoWS/helloRequest", output = "http://Servicio/AeropuertoWS/helloResponse")
    public String hello(
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @param a
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "registrar", targetNamespace = "http://Servicio/", className = "servicio.Registrar")
    @ResponseWrapper(localName = "registrarResponse", targetNamespace = "http://Servicio/", className = "servicio.RegistrarResponse")
    @Action(input = "http://Servicio/AeropuertoWS/registrarRequest", output = "http://Servicio/AeropuertoWS/registrarResponse")
    public int registrar(
        @WebParam(name = "a", targetNamespace = "")
        Aeropuerto a);

    /**
     * 
     * @return
     *     returns java.util.List<servicio.Aeropuerto>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listar", targetNamespace = "http://Servicio/", className = "servicio.Listar")
    @ResponseWrapper(localName = "listarResponse", targetNamespace = "http://Servicio/", className = "servicio.ListarResponse")
    @Action(input = "http://Servicio/AeropuertoWS/listarRequest", output = "http://Servicio/AeropuertoWS/listarResponse")
    public List<Aeropuerto> listar();

    /**
     * 
     * @param id
     */
    @WebMethod
    @RequestWrapper(localName = "eliminar", targetNamespace = "http://Servicio/", className = "servicio.Eliminar")
    @ResponseWrapper(localName = "eliminarResponse", targetNamespace = "http://Servicio/", className = "servicio.EliminarResponse")
    @Action(input = "http://Servicio/AeropuertoWS/eliminarRequest", output = "http://Servicio/AeropuertoWS/eliminarResponse")
    public void eliminar(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @param a
     */
    @WebMethod
    @RequestWrapper(localName = "modificar", targetNamespace = "http://Servicio/", className = "servicio.Modificar")
    @ResponseWrapper(localName = "modificarResponse", targetNamespace = "http://Servicio/", className = "servicio.ModificarResponse")
    @Action(input = "http://Servicio/AeropuertoWS/modificarRequest", output = "http://Servicio/AeropuertoWS/modificarResponse")
    public void modificar(
        @WebParam(name = "a", targetNamespace = "")
        Aeropuerto a);

}
